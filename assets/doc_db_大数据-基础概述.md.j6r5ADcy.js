import{_ as a,c as e,o,a4 as r}from"./chunks/framework.IXvbZIHp.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/db/大数据-基础概述.md","filePath":"doc/db/大数据-基础概述.md"}'),t={name:"doc/db/大数据-基础概述.md"},i=r('<h2 id="大数据概述" tabindex="-1">大数据概述 <a class="header-anchor" href="#大数据概述" aria-label="Permalink to &quot;大数据概述&quot;">​</a></h2><h3 id="_1-数据采集" tabindex="-1">1. 数据采集 <a class="header-anchor" href="#_1-数据采集" aria-label="Permalink to &quot;1. 数据采集&quot;">​</a></h3><p>一般包括各个业务系统的业务数据及日志等,数据采集包括但不限于消息中心/日志查询分析平台等.</p><h3 id="_2-数据存储" tabindex="-1">2. 数据存储 <a class="header-anchor" href="#_2-数据存储" aria-label="Permalink to &quot;2. 数据存储&quot;">​</a></h3><p>各类关系型数据/文档数据库等,用于各个业务系统的数据存储,为了解决海量半结构化和非结构化数据的存储,演进到分布式文件系统, 如Hadoop(HDFS),不过后者的缺点在于访问能力较弱,也有两者相结合的存储引擎,如HBase/MongoDB</p><h3 id="_3-数据分析" tabindex="-1">3. 数据分析 <a class="header-anchor" href="#_3-数据分析" aria-label="Permalink to &quot;3. 数据分析&quot;">​</a></h3><ul><li>流处理(实时型): 对运动中的数据进行处理，即在接收数据的同时就对其进行处理， 对应的处理框架有 Storm、Spark Streaming、Flink Streaming 等。</li><li>批处理(离线型): 对一段时间内海量的离线数据进行统一的处理，对应的处理框架有 Hadoop MapReduce、Spark、Flink 等；</li></ul><p>对于目前的大数据生态而言,为了能够让熟悉 SQL 的人员也能够进行数据的分析，查询分析框架应运而生: Hive 、Spark SQL 、Flink SQL、 Pig、Phoenix</p><h3 id="_4-数据应用" tabindex="-1">4. 数据应用 <a class="header-anchor" href="#_4-数据应用" aria-label="Permalink to &quot;4. 数据应用&quot;">​</a></h3><p>可视化/人工智能/算法优化等</p><h2 id="数仓概述" tabindex="-1">数仓概述 <a class="header-anchor" href="#数仓概述" aria-label="Permalink to &quot;数仓概述&quot;">​</a></h2><h3 id="数据库-数据仓库" tabindex="-1">数据库/数据仓库 <a class="header-anchor" href="#数据库-数据仓库" aria-label="Permalink to &quot;数据库/数据仓库&quot;">​</a></h3><p>数据库核心在于联机事务处理OLTP,简单来说就是增删改查 数据仓库一般用于联机分析处理OLAP,目的在于数据更多维度的分析.</p><p>数仓的构建一般需要ETL工具和调度工具.</p><p>目前主流的数仓模型,对数仓进行了分层设计: <code>ODS（临时存储层）</code>、<code>PDW（数据仓库层）</code>、<code>DM（数据集市层）</code>、<code>APP（应用层）</code> 目的在于针对ETL优化/分析优化.</p><h2 id="数据湖概念" tabindex="-1">数据湖概念 <a class="header-anchor" href="#数据湖概念" aria-label="Permalink to &quot;数据湖概念&quot;">​</a></h2><h3 id="数据湖和数仓" tabindex="-1">数据湖和数仓 <a class="header-anchor" href="#数据湖和数仓" aria-label="Permalink to &quot;数据湖和数仓&quot;">​</a></h3><p>数据湖也可以用于OLAP,但它并不是数仓的对立面,数据湖目的在于链接不同的数据存储引擎用于分析查询,数据湖的数据源也可以来自数据仓库 事实上,数据湖可以通过虚拟层的概念模拟数据仓库的实现,相较于数仓,它提供了更强大的实时分析能力.</p><p>目前我接触到的数据湖引擎<code>dremio</code>,能够接入各类关系型数据库/HDFS/S3/Hive...,对于下游应用则支持PowerBI/tableau</p>',19),d=[i];function l(h,n,c,_,s,p){return o(),e("div",null,d)}const m=a(t,[["render",l]]);export{b as __pageData,m as default};
