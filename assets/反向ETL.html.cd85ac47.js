import{_ as n,a as s}from"./app.6a98a4dc.js";const a={},p=s(`<h2 id="\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u7B80\u4ECB" aria-hidden="true">#</a> \u7B80\u4ECB</h2><p>\u53CD\u5411etl\u533A\u522B\u4E0Eetl,\u5176\u4E3B\u8981\u76EE\u7684\u5728\u4E8E\u6570\u636E\u4ED3\u5E93\u5230\u4E0B\u6E38\u7CFB\u7EDF, etl\u66F4\u591A\u7684\u662F\u4E3A\u4E86 \u6570\u4ED3\u7684\u521B\u5EFA. \u53CD\u5411etl\u76EE\u7684\u5728\u4E8E\u63D0\u4F9B\u4E00\u4E2A\u6807\u51C6\u58F0\u660E,\u65B9\u4FBF\u4E0B\u6E38app\u5171\u4EAB\u57FA\u7840\u80FD\u529B\u548C\u6269\u5C55. \u7528\u9014: \u4E3B\u6570\u636E\u8BA2\u9605/\u7B2C\u4E09\u65B9\u6570\u636E\u8BA2\u9605\u7B49</p><h2 id="\u6838\u5FC3\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6838\u5FC3\u7EC4\u4EF6" aria-hidden="true">#</a> \u6838\u5FC3\u7EC4\u4EF6</h2><ul><li>easybatch \u6279\u5904\u7406</li><li>xxljob \u5206\u5E03\u5F0F\u8C03\u5EA6</li><li>pf4j \u63D2\u4EF6\u5316\u5F00\u53D1</li><li>dremio \u6570\u636E\u6E56(\u5927\u4E8E\u6570\u4ED3,\u63D0\u4F9B\u66F4\u5F3A\u5927\u7684olap\u80FD\u529B)</li></ul><p>easybatch \u6279\u5904\u7406\u7ED3\u5408 xxljob\u8C03\u5EA6\u5373\u53EF\u5B9E\u73B0 \u7B80\u5355\u53EF\u9760\u7684\u6570\u636E\u5206\u53D1\u529F\u80FD,\u914D\u5408\u6570\u636E\u6E56/pf4j \u63D2\u4EF6\u5F00\u53D1,\u53EF\u4EE5\u5B9E\u73B0\u76F8\u5F53\u7075\u6D3B\u7684 : \u53CD\u5411etl\u529F\u80FD/\u6570\u636E\u8BA2\u9605.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IBatch</span><span class="token generics"><span class="token punctuation">&lt;</span>SOURCE<span class="token punctuation">,</span> SINK<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    
    <span class="token class-name">JobExecutor</span> <span class="token function">jobExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">RecordReader</span> <span class="token function">reader</span><span class="token punctuation">(</span><span class="token class-name">SOURCE</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">RecordWriter</span> <span class="token function">writer</span><span class="token punctuation">(</span><span class="token class-name">BatchResult</span> result<span class="token punctuation">,</span> <span class="token class-name">SINK</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">RecordMapper</span> <span class="token function">mapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">default</span> <span class="token class-name">CustomPipelineListener</span> <span class="token function">customPipelineListener</span><span class="token punctuation">(</span><span class="token class-name">String</span> jobId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CustomPipelineListener</span><span class="token punctuation">(</span>jobId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">default</span> <span class="token class-name">CustomWriterListener</span> <span class="token function">customWriterListener</span><span class="token punctuation">(</span><span class="token class-name">String</span> jobId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CustomWriterListener</span><span class="token punctuation">(</span>jobId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">default</span> <span class="token class-name">CustomReaderListener</span> <span class="token function">customReaderListener</span><span class="token punctuation">(</span><span class="token class-name">String</span> jobId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CustomReaderListener</span><span class="token punctuation">(</span>jobId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u53EF\u9009</span>
    <span class="token keyword">default</span> <span class="token class-name">RecordProcessor</span> <span class="token function">processor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">default</span> <span class="token class-name">BatchResult</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">SOURCE</span> source<span class="token punctuation">,</span> <span class="token class-name">SINK</span> sink<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BatchResult</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BatchResult</span><span class="token punctuation">(</span><span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">XxlJobHelper</span><span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JobExecutor</span> jobExecutor <span class="token operator">=</span> <span class="token function">jobExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JobBuilder</span> jobBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JobBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobBuilder<span class="token punctuation">.</span><span class="token function">reader</span><span class="token punctuation">(</span><span class="token function">reader</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobBuilder<span class="token punctuation">.</span><span class="token function">writer</span><span class="token punctuation">(</span><span class="token function">writer</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> sink<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//jobBuilder.batchSize(100);</span>
        <span class="token class-name">RecordMapper</span> mapper <span class="token operator">=</span> <span class="token function">mapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mapper <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            jobBuilder<span class="token punctuation">.</span><span class="token function">mapper</span><span class="token punctuation">(</span>mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">RecordProcessor</span> processor <span class="token operator">=</span> <span class="token function">processor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>processor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            jobBuilder<span class="token punctuation">.</span><span class="token function">processor</span><span class="token punctuation">(</span>processor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        jobBuilder<span class="token punctuation">.</span><span class="token function">readerListener</span><span class="token punctuation">(</span><span class="token function">customReaderListener</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobBuilder<span class="token punctuation">.</span><span class="token function">writerListener</span><span class="token punctuation">(</span><span class="token function">customWriterListener</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobBuilder<span class="token punctuation">.</span><span class="token function">pipelineListener</span><span class="token punctuation">(</span><span class="token function">customPipelineListener</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Job</span> job <span class="token operator">=</span> jobBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JobReport</span> jobReport <span class="token operator">=</span> jobExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setJobReport</span><span class="token punctuation">(</span>jobReport<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BatchResult</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> jobId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> xxlJobId<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u603B\u5206\u53D1\u8BB0\u5F55\u6570
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> totalNum<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u5F53\u524D\u5206\u53D1\u8BB0\u5F55\u5E8F\u53F7
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> currentNum<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u5355\u6B21\u5199\u8BF7\u6C42\u7684\u6570\u636E\u91CF
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> batchSize<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> success<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> jobReport<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> successNum<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> errorNum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,7);function t(e,c){return p}var l=n(a,[["render",t],["__file","\u53CD\u5411ETL.html.vue"]]);export{l as default};
