import{_ as e,c as o,o as t,a4 as r}from"./chunks/framework.IXvbZIHp.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/ops/Docker-常用指令.md","filePath":"doc/ops/Docker-常用指令.md"}'),c={name:"doc/ops/Docker-常用指令.md"},p=r(`<p><a href="https://www.csdn.net/tags/Mtzakg4sOTQ0NTYtYmxvZwO0O0OO0O0O.html" target="_blank" rel="noreferrer">https://www.csdn.net/tags/Mtzakg4sOTQ0NTYtYmxvZwO0O0OO0O0O.html</a></p><blockquote><p>docker build -t my/demoapp .</p></blockquote><blockquote><p>docker exec -it {} /bin/bash</p></blockquote><blockquote><p>docker logs -f {}</p></blockquote><p><a href="http://10.6.207.82:8080/xxljob/" target="_blank" rel="noreferrer"></a></p><blockquote><p>docker run -d -p 8081:8081 -p 9999:9999 my/demoapp</p></blockquote><pre><code>-p: 指定端口映射，格式为：主机(宿主)端口:容器端口
-d: 后台运行容器，并返回容器ID；
-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；
-i: 以交互模式运行容器，通常与 -t 同时使用；
</code></pre><blockquote><p>docker run -d -p 8080:8080 -e PARAMS=&quot;--server.port=8080&quot; my/demoapp</p></blockquote><p>空悬镜像删除</p><blockquote><p>docker rmi $(docker images -q -f dangling=true)</p></blockquote>`,10),a=[p];function s(d,n,_,l,k,u){return t(),o("div",null,a)}const b=e(c,[["render",s]]);export{m as __pageData,b as default};
